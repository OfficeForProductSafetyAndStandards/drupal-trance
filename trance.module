<?php

/**
 * @file
 * Contains trance.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function trance_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the trance module.
    case 'help.page.trance':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Translatable Content Entity') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function trance_theme() {
  return [
    'trance' => [
      'render element' => 'elements',
      'file' => 'trance.page.inc',
      'template' => 'trance',
      'file' => 'trance.page.inc',
    ],
    'trance_content_add_list' => [
      'render element' => 'content',
      'variables' => [
        'content' => NULL,
      ],
      'template' => 'trance-content-add-list',
      'file' => 'trance.page.inc',
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
 */
function trance_entity_type_alter(array &$entity_types) {
  if (\Drupal::moduleHandler()->moduleExists('multiversion')) {
    /** @var \Drupal\multiversion\MultiversionManagerInterface $manager */
    $manager = \Drupal::service('multiversion.manager');
    foreach ($entity_types as $entity_type) {
      if ($manager->isEnabledEntityType($entity_type)) {
        if ($entity_type->getHandlerClass('storage') == "Drupal\\trance\\TranceStorage") {
          $entity_type->setHandlerClass('storage', "Drupal\\trance\\TranceMultiversionStorage");
        }
      }
    }
  }
}
